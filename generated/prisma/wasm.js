
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.HospitalScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  photo: 'photo',
  HospitalStatus: 'HospitalStatus',
  phone: 'phone',
  mail: 'mail'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  user_Id: 'user_Id',
  password: 'password',
  role: 'role'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  user_Id: 'user_Id',
  destination: 'destination',
  phone: 'phone',
  email: 'email',
  address: 'address',
  photo: 'photo',
  name: 'name',
  status: 'status',
  gender: 'gender',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminStratorScalarFieldEnum = {
  id: 'id',
  user_Id: 'user_Id',
  name: 'name',
  status: 'status',
  destination: 'destination',
  phone: 'phone',
  email: 'email',
  photo: 'photo',
  address: 'address',
  gender: 'gender'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  user_Id: 'user_Id',
  name: 'name',
  phone: 'phone',
  email: 'email',
  photo: 'photo',
  status: 'status',
  address: 'address',
  dob: 'dob',
  gender: 'gender',
  bldGrp: 'bldGrp',
  currentProblem: 'currentProblem',
  medicalHistory: 'medicalHistory',
  height: 'height',
  weight: 'weight',
  bp: 'bp',
  sugar: 'sugar',
  custom: 'custom',
  tempCreatedAt: 'tempCreatedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConsultationScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  patient_Id: 'patient_Id',
  doctor_Id: 'doctor_Id',
  date: 'date',
  purpose: 'purpose',
  temperature: 'temperature',
  symptoms: 'symptoms',
  notes: 'notes',
  diagnosis: 'diagnosis',
  treatment: 'treatment',
  medicineInjection: 'medicineInjection',
  scanningTesting: 'scanningTesting',
  status: 'status',
  access: 'access',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paymentStatus: 'paymentStatus'
};

exports.Prisma.TreatmentScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  staff_Id: 'staff_Id',
  patient_Id: 'patient_Id',
  doctor_Id: 'doctor_Id',
  treatmentName: 'treatmentName',
  startDate: 'startDate',
  endDate: 'endDate',
  progress: 'progress',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paymentStatus: 'paymentStatus'
};

exports.Prisma.MedicianScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  medicianName: 'medicianName',
  stock: 'stock',
  amount: 'amount',
  staffId: 'staffId'
};

exports.Prisma.InjectionScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  injectionName: 'injectionName',
  stock: 'stock',
  amount: 'amount',
  staffId: 'staffId'
};

exports.Prisma.TestingAndScanningHScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  type: 'type',
  status: 'status',
  roomNo: 'roomNo',
  staffId: 'staffId',
  amount: 'amount'
};

exports.Prisma.MedicineAndInjectionScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  patient_Id: 'patient_Id',
  doctor_Id: 'doctor_Id',
  staff_Id: 'staff_Id',
  medicine_Id: 'medicine_Id',
  frequencyMedicine: 'frequencyMedicine',
  injection_Id: 'injection_Id',
  frequencyInjection: 'frequencyInjection',
  status: 'status',
  notes: 'notes',
  paymentStatus: 'paymentStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TestingAndScanningPScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  patient_Id: 'patient_Id',
  doctor_Id: 'doctor_Id',
  staff_Id: 'staff_Id',
  title: 'title',
  scheduleDate: 'scheduleDate',
  type: 'type',
  status: 'status',
  paymentStatus: 'paymentStatus',
  result: 'result'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  patient_Id: 'patient_Id',
  reason: 'reason',
  status: 'status',
  amount: 'amount',
  transactionId: 'transactionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoomsAvailableScalarFieldEnum = {
  id: 'id',
  hospital_Id: 'hospital_Id',
  staffId: 'staffId',
  roomNo: 'roomNo',
  capacity: 'capacity',
  notes: 'notes',
  type: 'type',
  amount: 'amount'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.HospitalOrderByRelevanceFieldEnum = {
  name: 'name',
  address: 'address',
  photo: 'photo',
  phone: 'phone',
  mail: 'mail'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  password: 'password',
  role: 'role'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  destination: 'destination',
  phone: 'phone',
  email: 'email',
  address: 'address',
  photo: 'photo',
  name: 'name',
  status: 'status',
  gender: 'gender'
};

exports.Prisma.AdminStratorOrderByRelevanceFieldEnum = {
  name: 'name',
  status: 'status',
  destination: 'destination',
  phone: 'phone',
  email: 'email',
  photo: 'photo',
  address: 'address',
  gender: 'gender'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.PatientOrderByRelevanceFieldEnum = {
  name: 'name',
  photo: 'photo',
  status: 'status',
  gender: 'gender',
  bldGrp: 'bldGrp',
  currentProblem: 'currentProblem',
  medicalHistory: 'medicalHistory',
  bp: 'bp',
  sugar: 'sugar'
};

exports.Prisma.ConsultationOrderByRelevanceFieldEnum = {
  purpose: 'purpose',
  symptoms: 'symptoms',
  diagnosis: 'diagnosis',
  status: 'status'
};

exports.Prisma.TreatmentOrderByRelevanceFieldEnum = {
  progress: 'progress',
  status: 'status'
};

exports.Prisma.MedicianOrderByRelevanceFieldEnum = {
  medicianName: 'medicianName'
};

exports.Prisma.InjectionOrderByRelevanceFieldEnum = {
  injectionName: 'injectionName'
};

exports.Prisma.TestingAndScanningHOrderByRelevanceFieldEnum = {
  type: 'type',
  status: 'status',
  roomNo: 'roomNo'
};

exports.Prisma.MedicineAndInjectionOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.TestingAndScanningPOrderByRelevanceFieldEnum = {
  title: 'title',
  type: 'type',
  status: 'status',
  result: 'result'
};

exports.Prisma.PaymentOrderByRelevanceFieldEnum = {
  reason: 'reason'
};

exports.Prisma.RoomsAvailableOrderByRelevanceFieldEnum = {
  roomNo: 'roomNo',
  notes: 'notes',
  type: 'type'
};
exports.HospitalStatus = exports.$Enums.HospitalStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  success: 'success',
  failed: 'failed'
};

exports.Prisma.ModelName = {
  Hospital: 'Hospital',
  User: 'User',
  Admin: 'Admin',
  AdminStrator: 'AdminStrator',
  Patient: 'Patient',
  Consultation: 'Consultation',
  Treatment: 'Treatment',
  Medician: 'Medician',
  Injection: 'Injection',
  TestingAndScanningH: 'TestingAndScanningH',
  MedicineAndInjection: 'MedicineAndInjection',
  TestingAndScanningP: 'TestingAndScanningP',
  Payment: 'Payment',
  RoomsAvailable: 'RoomsAvailable'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Flutter_project\\new\\Hospital_Management_Backend\\hospital_management_server\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Flutter_project\\new\\Hospital_Management_Backend\\hospital_management_server\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "mysql://schoolAttendance:Sensarsoft%40123@[2a02:4780:12:f6a7::1]:3306/hospital_management"
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = \"mysql://schoolAttendance:Sensarsoft%40123@[2a02:4780:12:f6a7::1]:3306/hospital_management\"\n}\n\nmodel Hospital {\n  id             Int            @id @default(autoincrement())\n  name           String\n  address        String\n  photo          String\n  HospitalStatus HospitalStatus @default(ACTIVE)\n  phone          String\n  mail           String\n\n  Users                 User[]\n  Admins                Admin[]\n  Patients              Patient[]\n  Consultation          Consultation[]\n  Treatments            Treatment[]\n  Medicians             Medician[]\n  Injections            Injection[]\n  TestingAndScannings   TestingAndScanningP[]\n  TestingAndScanningHs  TestingAndScanningH[]\n  RoomsAvailables       RoomsAvailable[]\n  Payments              Payment[]\n  MedicineAndInjections MedicineAndInjection[]\n}\n\nenum HospitalStatus {\n  ACTIVE\n  INACTIVE\n}\n\nmodel User {\n  id          Int    @id @default(autoincrement())\n  hospital_Id Int\n  user_Id     Int\n  password    String\n  role        String\n\n  AdminStrator AdminStrator[]\n  Admin        Admin[]\n  Patient      Patient[]\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n}\n\nmodel Admin {\n  id           Int            @id @default(autoincrement())\n  hospital_Id  Int\n  user_Id      Int\n  destination  String\n  phone        String\n  email        String\n  address      String\n  photo        String\n  name         String\n  status       String\n  gender       String\n  createdAt    DateTime       @default(now())\n  updatedAt    DateTime       @updatedAt\n  Consultation Consultation[]\n  Doctor       Treatment[]    @relation(\"Doctor_Treatment\")\n  Staff        Treatment[]    @relation(\"Staff_Treatment\")\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n  User     User     @relation(fields: [user_Id], references: [id])\n}\n\nmodel AdminStrator {\n  id          Int    @id @default(autoincrement())\n  user_Id     Int\n  name        String\n  status      String\n  destination String\n  phone       String\n  email       String\n  photo       String\n  address     String\n  gender      String\n\n  User User @relation(fields: [user_Id], references: [id])\n}\n\nmodel Patient {\n  id                   Int                    @id @default(autoincrement())\n  hospital_Id          Int\n  user_Id              Int\n  name                 String\n  phone                Json // At least 2 numbers; use array or object in the app\n  email                Json // Array/object format in the app (at least 1)\n  photo                String\n  status               String\n  address              Json? // Optional JSON field for address details\n  dob                  DateTime\n  gender               String\n  bldGrp               String\n  currentProblem       String\n  medicalHistory       String\n  height               Float\n  weight               Float\n  bp                   String // BP (Blood Pressure), can be made Json if multiple values needed\n  sugar                String // Sugar level, can be made Json if multiple values needed\n  custom               Json // For custom fields, dynamic structure\n  tempCreatedAt        DateTime\n  createdAt            DateTime               @default(now())\n  updatedAt            DateTime               @updatedAt\n  Consultation         Consultation[]\n  Treatment            Treatment[]\n  MedicineAndInjection MedicineAndInjection[]\n  TestingAndScanning   TestingAndScanningP[]\n  Payments             Payment[]\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n  User     User     @relation(fields: [user_Id], references: [id])\n}\n\nmodel Consultation {\n  id                Int      @id @default(autoincrement())\n  hospital_Id       Int\n  patient_Id        Int\n  doctor_Id         Int\n  date              DateTime\n  purpose           String\n  temperature       Float\n  symptoms          String\n  notes             Json\n  diagnosis         String\n  treatment         Boolean\n  medicineInjection Boolean\n  scanningTesting   Boolean\n  status            String\n  access            Json\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n  paymentStatus     Boolean\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n  Patient  Patient  @relation(fields: [patient_Id], references: [id])\n  Doctor   Admin    @relation(fields: [doctor_Id], references: [id])\n}\n\nmodel Treatment {\n  id            Int      @id @default(autoincrement())\n  hospital_Id   Int\n  staff_Id      Json // Multi-staff, use array/object in app\n  patient_Id    Int\n  doctor_Id     Json // Multi-doctor, use array/object in app\n  treatmentName Json // Multiple names/types, array/object in app\n  startDate     DateTime\n  endDate       DateTime\n  progress      String\n  status        String\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n  paymentStatus Boolean\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n  Patient  Patient  @relation(fields: [patient_Id], references: [id])\n  Doctor   Admin[]  @relation(\"Doctor_Treatment\")\n  Staff    Admin[]  @relation(\"Staff_Treatment\")\n}\n\nmodel Medician {\n  id                   Int                    @id @default(autoincrement())\n  hospital_Id          Int\n  medicianName         String\n  stock                Int\n  amount               Float\n  staffId              Json // Multi-staff, array/object \n  MedicineAndInjection MedicineAndInjection[] @relation(\"MedicineAndInjection_Medician\")\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n}\n\nmodel Injection {\n  id                   Int                    @id @default(autoincrement())\n  hospital_Id          Int\n  injectionName        String\n  stock                Int\n  amount               Float\n  staffId              Json // Supports multiple staff assignments\n  MedicineAndInjection MedicineAndInjection[] @relation(\"Injection_MedicineAndInjection\")\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n}\n\nmodel TestingAndScanningH {\n  id          Int    @id @default(autoincrement())\n  hospital_Id Int\n  type        String\n  status      String\n  roomNo      String\n  staffId     Int\n  amount      Float\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n}\n\nmodel MedicineAndInjection {\n  id                 Int      @id @default(autoincrement())\n  hospital_Id        Int\n  patient_Id         Int\n  doctor_Id          Json // Multiple doctor IDs\n  staff_Id           Json // Multiple staff IDs\n  medicine_Id        Json // Multiple medicine IDs\n  frequencyMedicine  Json // Medicine frequency\n  injection_Id       Json // Multiple injection IDs\n  frequencyInjection Json // Injection frequency\n  status             String\n  notes              Json // Custom field\n  paymentStatus      Boolean\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n\n  Hospital  Hospital    @relation(fields: [hospital_Id], references: [id])\n  Patient   Patient     @relation(fields: [patient_Id], references: [id])\n  Medician  Medician[]  @relation(\"MedicineAndInjection_Medician\")\n  Injection Injection[] @relation(\"Injection_MedicineAndInjection\")\n}\n\nmodel TestingAndScanningP {\n  id            Int      @id @default(autoincrement())\n  hospital_Id   Int\n  patient_Id    Int\n  doctor_Id     Json // Multiple doctor IDs\n  staff_Id      Json // Multiple staff IDs\n  title         String\n  scheduleDate  DateTime\n  type          String // \"Testing\" or \"Scanning\"\n  status        String\n  paymentStatus Boolean\n  result        String\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n  Patient  Patient  @relation(fields: [patient_Id], references: [id])\n}\n\nenum PaymentStatus {\n  success\n  failed\n}\n\nmodel Payment {\n  id            Int           @id @default(autoincrement())\n  hospital_Id   Int\n  patient_Id    Int\n  reason        String\n  status        PaymentStatus\n  amount        Float\n  transactionId Json\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n  Patient  Patient  @relation(fields: [patient_Id], references: [id])\n}\n\nmodel RoomsAvailable {\n  id          Int    @id @default(autoincrement())\n  hospital_Id Int\n  staffId     Int\n  roomNo      String\n  capacity    Int\n  notes       String\n  type        String // Use for reason/type of room\n  amount      Float\n\n  Hospital Hospital @relation(fields: [hospital_Id], references: [id])\n}\n",
  "inlineSchemaHash": "c4e3d49fd4710edb386f292770db4f4dc7aa966bafcf393639e5c173aff3f0ba",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Hospital\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"HospitalStatus\",\"kind\":\"enum\",\"type\":\"HospitalStatus\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HospitalToUser\"},{\"name\":\"Admins\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToHospital\"},{\"name\":\"Patients\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"HospitalToPatient\"},{\"name\":\"Consultation\",\"kind\":\"object\",\"type\":\"Consultation\",\"relationName\":\"ConsultationToHospital\"},{\"name\":\"Treatments\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"HospitalToTreatment\"},{\"name\":\"Medicians\",\"kind\":\"object\",\"type\":\"Medician\",\"relationName\":\"HospitalToMedician\"},{\"name\":\"Injections\",\"kind\":\"object\",\"type\":\"Injection\",\"relationName\":\"HospitalToInjection\"},{\"name\":\"TestingAndScannings\",\"kind\":\"object\",\"type\":\"TestingAndScanningP\",\"relationName\":\"HospitalToTestingAndScanningP\"},{\"name\":\"TestingAndScanningHs\",\"kind\":\"object\",\"type\":\"TestingAndScanningH\",\"relationName\":\"HospitalToTestingAndScanningH\"},{\"name\":\"RoomsAvailables\",\"kind\":\"object\",\"type\":\"RoomsAvailable\",\"relationName\":\"HospitalToRoomsAvailable\"},{\"name\":\"Payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"HospitalToPayment\"},{\"name\":\"MedicineAndInjections\",\"kind\":\"object\",\"type\":\"MedicineAndInjection\",\"relationName\":\"HospitalToMedicineAndInjection\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AdminStrator\",\"kind\":\"object\",\"type\":\"AdminStrator\",\"relationName\":\"AdminStratorToUser\"},{\"name\":\"Admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToUser\"},{\"name\":\"Patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToUser\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToUser\"}],\"dbName\":null},\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"destination\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Consultation\",\"kind\":\"object\",\"type\":\"Consultation\",\"relationName\":\"AdminToConsultation\"},{\"name\":\"Doctor\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"Doctor_Treatment\"},{\"name\":\"Staff\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"Staff_Treatment\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"AdminToHospital\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminToUser\"}],\"dbName\":null},\"AdminStrator\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"destination\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminStratorToUser\"}],\"dbName\":null},\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"dob\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bldGrp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentProblem\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalHistory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"bp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sugar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"custom\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tempCreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Consultation\",\"kind\":\"object\",\"type\":\"Consultation\",\"relationName\":\"ConsultationToPatient\"},{\"name\":\"Treatment\",\"kind\":\"object\",\"type\":\"Treatment\",\"relationName\":\"PatientToTreatment\"},{\"name\":\"MedicineAndInjection\",\"kind\":\"object\",\"type\":\"MedicineAndInjection\",\"relationName\":\"MedicineAndInjectionToPatient\"},{\"name\":\"TestingAndScanning\",\"kind\":\"object\",\"type\":\"TestingAndScanningP\",\"relationName\":\"PatientToTestingAndScanningP\"},{\"name\":\"Payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PatientToPayment\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToPatient\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PatientToUser\"}],\"dbName\":null},\"Consultation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctor_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"purpose\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"temperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"symptoms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"diagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatment\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"medicineInjection\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"scanningTesting\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"ConsultationToHospital\"},{\"name\":\"Patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ConsultationToPatient\"},{\"name\":\"Doctor\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToConsultation\"}],\"dbName\":null},\"Treatment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"staff_Id\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"patient_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctor_Id\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"treatmentName\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToTreatment\"},{\"name\":\"Patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToTreatment\"},{\"name\":\"Doctor\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"Doctor_Treatment\"},{\"name\":\"Staff\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"Staff_Treatment\"}],\"dbName\":null},\"Medician\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"medicianName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"MedicineAndInjection\",\"kind\":\"object\",\"type\":\"MedicineAndInjection\",\"relationName\":\"MedicineAndInjection_Medician\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToMedician\"}],\"dbName\":null},\"Injection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"injectionName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"MedicineAndInjection\",\"kind\":\"object\",\"type\":\"MedicineAndInjection\",\"relationName\":\"Injection_MedicineAndInjection\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToInjection\"}],\"dbName\":null},\"TestingAndScanningH\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToTestingAndScanningH\"}],\"dbName\":null},\"MedicineAndInjection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctor_Id\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"staff_Id\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"medicine_Id\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"frequencyMedicine\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"injection_Id\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"frequencyInjection\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"paymentStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToMedicineAndInjection\"},{\"name\":\"Patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"MedicineAndInjectionToPatient\"},{\"name\":\"Medician\",\"kind\":\"object\",\"type\":\"Medician\",\"relationName\":\"MedicineAndInjection_Medician\"},{\"name\":\"Injection\",\"kind\":\"object\",\"type\":\"Injection\",\"relationName\":\"Injection_MedicineAndInjection\"}],\"dbName\":null},\"TestingAndScanningP\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctor_Id\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"staff_Id\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduleDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToTestingAndScanningP\"},{\"name\":\"Patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToTestingAndScanningP\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToPayment\"},{\"name\":\"Patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToPayment\"}],\"dbName\":null},\"RoomsAvailable\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hospital_Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roomNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"Hospital\",\"kind\":\"object\",\"type\":\"Hospital\",\"relationName\":\"HospitalToRoomsAvailable\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

